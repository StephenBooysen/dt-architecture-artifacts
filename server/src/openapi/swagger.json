{
  "openapi": "3.0.3",
  "info": {
    "title": "Architecture Artifacts Core API",
    "description": "Core API endpoints for the Architecture Artifacts application - a comprehensive enterprise architecture documentation platform with multi-space file management, Git integration, authentication, templates, microservices, and search functionality.",
    "version": "2.0.0",
    "contact": {
      "name": "Design Artifacts Team"
    }
  },
  "servers": [
    {
      "url": "/api",
      "description": "Core API server"
    }
  ],
  "components": {
    "securitySchemes": {
      "sessionAuth": {
        "type": "apiKey",
        "in": "cookie",
        "name": "connect.sid",
        "description": "Session-based authentication using cookies"
      }
    },
    "schemas": {
      "Error": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "username": {
            "type": "string"
          }
        }
      },
      "FileTreeItem": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": ["file", "directory"]
          },
          "path": {
            "type": "string"
          },
          "fileType": {
            "type": "string",
            "enum": ["markdown", "pdf", "image", "text", "unknown"]
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FileTreeItem"
            }
          }
        }
      },
      "FileContent": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string"
          },
          "cleanContent": {
            "type": "string"
          },
          "path": {
            "type": "string"
          },
          "fileType": {
            "type": "string"
          },
          "encoding": {
            "type": "string"
          },
          "comments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Comment"
            }
          },
          "hasComments": {
            "type": "boolean"
          }
        }
      },
      "Comment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "author": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Template": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "variables": {
            "type": "object"
          }
        }
      },
      "GitStatus": {
        "type": "object",
        "properties": {
          "ahead": {
            "type": "integer"
          },
          "behind": {
            "type": "integer"
          },
          "current": {
            "type": "string"
          },
          "tracking": {
            "type": "string"
          },
          "files": {
            "type": "array",
            "items": {
              "type": "object"
            }
          }
        }
      },
      "SearchResult": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "path": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "fileName": {
            "type": "string"
          },
          "filePath": {
            "type": "string"
          },
          "preview": {
            "type": "string"
          },
          "matchIndex": {
            "type": "integer"
          }
        }
      },
      "RecentFile": {
        "type": "object",
        "properties": {
          "path": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "lastEditBy": {
            "type": "string"
          },
          "lastEditDate": {
            "type": "string",
            "format": "date-time"
          },
          "recentEdits": {
            "type": "array",
            "items": {
              "type": "object"
            }
          }
        }
      },
      "Space": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "path": {
            "type": "string"
          },
          "gitEnabled": {
            "type": "boolean"
          },
          "remote": {
            "type": "string"
          },
          "branch": {
            "type": "string"
          },
          "readonly": {
            "type": "boolean"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "SpaceUser": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "permissions": {
            "type": "string",
            "enum": ["read", "write", "admin"]
          }
        }
      },
      "PerformanceMetrics": {
        "type": "object",
        "properties": {
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "cpu": {
            "type": "number"
          },
          "memory": {
            "type": "number"
          },
          "disk": {
            "type": "number"
          }
        }
      },
      "ServiceStatus": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": ["running", "stopped", "error"]
          },
          "url": {
            "type": "string"
          },
          "health": {
            "type": "boolean"
          }
        }
      },
      "GitDraft": {
        "type": "object",
        "properties": {
          "path": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "SyncStatus": {
        "type": "object",
        "properties": {
          "lastSync": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      }
    }
  },
  "paths": {
    "/auth/register": {
      "post": {
        "summary": "Register a new user",
        "tags": ["Authentication"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["username", "password"],
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string",
                    "minLength": 6
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "user": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "User already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "summary": "Login user",
        "tags": ["Authentication"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["username", "password"],
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "user": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "summary": "Logout user",
        "tags": ["Authentication"],
        "security": [
          {
            "sessionAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Logout successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/me": {
      "get": {
        "summary": "Get current user info",
        "tags": ["Authentication"],
        "responses": {
          "200": {
            "description": "User information",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/auth/users": {
      "get": {
        "summary": "Get all users",
        "tags": ["Authentication"],
        "security": [
          {
            "sessionAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/user-spaces": {
      "get": {
        "summary": "Get user's allowed spaces",
        "tags": ["Authentication"],
        "security": [
          {
            "sessionAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of spaces user has access to",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Space"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/server/status": {
      "get": {
        "summary": "Get server status",
        "tags": ["Server"],
        "responses": {
          "200": {
            "description": "Server status information",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "timestamp": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "uptime": {
                      "type": "number"
                    },
                    "version": {
                      "type": "string"
                    },
                    "services": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ServiceStatus"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/server/performance": {
      "get": {
        "summary": "Get server performance metrics",
        "tags": ["Server"],
        "responses": {
          "200": {
            "description": "Performance metrics and history",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "current": {
                      "$ref": "#/components/schemas/PerformanceMetrics"
                    },
                    "history": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PerformanceMetrics"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/server/initialize": {
      "post": {
        "summary": "Initialize server directory structure",
        "tags": ["Server"],
        "security": [
          {
            "sessionAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Server initialized successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/server/spec/swagger.json": {
      "get": {
        "summary": "Get OpenAPI specification",
        "tags": ["Server"],
        "responses": {
          "200": {
            "description": "OpenAPI specification",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/files": {
      "get": {
        "summary": "Get file tree",
        "tags": ["Files"],
        "responses": {
          "200": {
            "description": "File tree structure",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FileTreeItem"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create new markdown file",
        "tags": ["Files"],
        "security": [
          {
            "sessionAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["filePath"],
                "properties": {
                  "filePath": {
                    "type": "string",
                    "description": "Path for the new file (must end with .md)"
                  },
                  "content": {
                    "type": "string",
                    "default": ""
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "File created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "File already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/files/{filePath}": {
      "get": {
        "summary": "Get file content",
        "tags": ["Files"],
        "parameters": [
          {
            "name": "filePath",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path to the file"
          }
        ],
        "responses": {
          "200": {
            "description": "File content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileContent"
                }
              }
            }
          },
          "404": {
            "description": "File not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Save file content",
        "tags": ["Files"],
        "security": [
          {
            "sessionAuth": []
          }
        ],
        "parameters": [
          {
            "name": "filePath",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path to the file"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["content"],
                "properties": {
                  "content": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "File saved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete file or folder",
        "tags": ["Files"],
        "security": [
          {
            "sessionAuth": []
          }
        ],
        "parameters": [
          {
            "name": "filePath",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path to the file or folder"
          }
        ],
        "responses": {
          "200": {
            "description": "File/folder deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/folders": {
      "post": {
        "summary": "Create new folder",
        "tags": ["Files"],
        "security": [
          {
            "sessionAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["folderPath"],
                "properties": {
                  "folderPath": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Folder created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/download/{filePath}": {
      "get": {
        "summary": "Download file",
        "tags": ["Files"],
        "parameters": [
          {
            "name": "filePath",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path to the file to download"
          }
        ],
        "responses": {
          "200": {
            "description": "File download",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "404": {
            "description": "File not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/upload": {
      "post": {
        "summary": "Upload file (legacy endpoint)",
        "tags": ["Files"],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  },
                  "folderPath": {
                    "type": "string",
                    "description": "Target folder path (optional)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "File uploaded successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "filePath": {
                      "type": "string"
                    },
                    "fileName": {
                      "type": "string"
                    },
                    "size": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{space}/files": {
      "get": {
        "summary": "Get file tree for specific space",
        "tags": ["Space Files"],
        "security": [
          {
            "sessionAuth": []
          }
        ],
        "parameters": [
          {
            "name": "space",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Space name"
          }
        ],
        "responses": {
          "200": {
            "description": "File tree structure for space",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FileTreeItem"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access denied to space",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/{space}/files/{filePath}": {
      "get": {
        "summary": "Get file content in space",
        "tags": ["Space Files"],
        "security": [
          {
            "sessionAuth": []
          }
        ],
        "parameters": [
          {
            "name": "space",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Space name"
          },
          {
            "name": "filePath",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path to the file within space"
          }
        ],
        "responses": {
          "200": {
            "description": "File content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileContent"
                }
              }
            }
          },
          "403": {
            "description": "Access denied to space",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "File not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create file in space",
        "tags": ["Space Files"],
        "security": [
          {
            "sessionAuth": []
          }
        ],
        "parameters": [
          {
            "name": "space",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Space name"
          },
          {
            "name": "filePath",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path for the new file"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["content"],
                "properties": {
                  "content": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "File created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Write access denied to space",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update file in space",
        "tags": ["Space Files"],
        "security": [
          {
            "sessionAuth": []
          }
        ],
        "parameters": [
          {
            "name": "space",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Space name"
          },
          {
            "name": "filePath",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path to the file"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["content"],
                "properties": {
                  "content": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "File updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Write access denied to space",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete file in space",
        "tags": ["Space Files"],
        "security": [
          {
            "sessionAuth": []
          }
        ],
        "parameters": [
          {
            "name": "space",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Space name"
          },
          {
            "name": "filePath",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path to the file"
          }
        ],
        "responses": {
          "200": {
            "description": "File deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Write access denied to space",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/{space}/folders": {
      "post": {
        "summary": "Create folder in space",
        "tags": ["Space Files"],
        "security": [
          {
            "sessionAuth": []
          }
        ],
        "parameters": [
          {
            "name": "space",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Space name"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["folderPath"],
                "properties": {
                  "folderPath": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Folder created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Write access denied to space",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/{space}/upload": {
      "post": {
        "summary": "Upload file to space",
        "tags": ["Space Files"],
        "security": [
          {
            "sessionAuth": []
          }
        ],
        "parameters": [
          {
            "name": "space",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Space name"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  },
                  "folderPath": {
                    "type": "string",
                    "description": "Target folder path within space (optional)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "File uploaded successfully to space",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "filePath": {
                      "type": "string"
                    },
                    "fileName": {
                      "type": "string"
                    },
                    "size": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Write access denied to space",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/{space}/download/{filePath}": {
      "get": {
        "summary": "Download file from space",
        "tags": ["Space Files"],
        "security": [
          {
            "sessionAuth": []
          }
        ],
        "parameters": [
          {
            "name": "space",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Space name"
          },
          {
            "name": "filePath",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path to the file to download"
          }
        ],
        "responses": {
          "200": {
            "description": "File download",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "403": {
            "description": "Access denied to space",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "File not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/{space}/rename/{filePath}": {
      "put": {
        "summary": "Rename file or folder in space",
        "tags": ["Space Files"],
        "security": [
          {
            "sessionAuth": []
          }
        ],
        "parameters": [
          {
            "name": "space",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Space name"
          },
          {
            "name": "filePath",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Current path of the file/folder"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["newName"],
                "properties": {
                  "newName": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Item renamed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "oldPath": {
                      "type": "string"
                    },
                    "newPath": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Write access denied to space",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/rename/{filePath}": {
      "put": {
        "summary": "Rename file or folder",
        "tags": ["Files"],
        "parameters": [
          {
            "name": "filePath",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Current path of the file/folder"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["newName"],
                "properties": {
                  "newName": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Item renamed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "oldPath": {
                      "type": "string"
                    },
                    "newPath": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/commit": {
      "post": {
        "summary": "Commit changes to Git",
        "tags": ["Git"],
        "security": [
          {
            "sessionAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["message"],
                "properties": {
                  "message": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Changes committed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/push": {
      "post": {
        "summary": "Push changes to remote Git repository",
        "tags": ["Git"],
        "responses": {
          "200": {
            "description": "Changes pushed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/status": {
      "get": {
        "summary": "Get Git status",
        "tags": ["Git"],
        "responses": {
          "200": {
            "description": "Git status information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GitStatus"
                }
              }
            }
          }
        }
      }
    },
    "/clone": {
      "post": {
        "summary": "Clone Git repository",
        "tags": ["Git"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["repoUrl"],
                "properties": {
                  "repoUrl": {
                    "type": "string"
                  },
                  "branch": {
                    "type": "string",
                    "default": "main"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Repository cloned successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "branch": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/pull": {
      "post": {
        "summary": "Pull changes from remote Git repository",
        "tags": ["Git"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "branch": {
                    "type": "string",
                    "default": "main"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Repository updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "branch": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/git-status": {
      "get": {
        "summary": "Get Git status for all spaces",
        "tags": ["Git"],
        "security": [
          {
            "sessionAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Git status for all accessible spaces",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/GitStatus"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/git/drafts": {
      "get": {
        "summary": "Get draft files",
        "tags": ["Git"],
        "security": [
          {
            "sessionAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of draft files",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GitDraft"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/git/discard-drafts": {
      "post": {
        "summary": "Discard draft changes",
        "tags": ["Git"],
        "security": [
          {
            "sessionAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Draft changes discarded successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/git/git-status": {
      "get": {
        "summary": "Enhanced Git status with drafts",
        "tags": ["Git"],
        "security": [
          {
            "sessionAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Enhanced Git status information",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/GitStatus"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "drafts": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/GitDraft"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/git/sync-status": {
      "get": {
        "summary": "Get last sync information",
        "tags": ["Git"],
        "security": [
          {
            "sessionAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Sync status information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SyncStatus"
                }
              }
            }
          }
        }
      }
    },
    "/git/provider-info": {
      "get": {
        "summary": "Get filing provider information",
        "tags": ["Git"],
        "security": [
          {
            "sessionAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Filing provider information",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "provider": {
                      "type": "string"
                    },
                    "version": {
                      "type": "string"
                    },
                    "capabilities": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{space}/resync": {
      "post": {
        "summary": "Force resync space with remote",
        "tags": ["Space Git"],
        "security": [
          {
            "sessionAuth": []
          }
        ],
        "parameters": [
          {
            "name": "space",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Space name"
          }
        ],
        "responses": {
          "200": {
            "description": "Space resynced successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Write access denied to space",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/{space}/commit": {
      "post": {
        "summary": "Commit changes in space",
        "tags": ["Space Git"],
        "security": [
          {
            "sessionAuth": []
          }
        ],
        "parameters": [
          {
            "name": "space",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Space name"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["message"],
                "properties": {
                  "message": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Changes committed successfully in space",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "commit": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Write access denied to space",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/{space}/force-reset": {
      "post": {
        "summary": "Force reset space to remote state",
        "tags": ["Space Git"],
        "security": [
          {
            "sessionAuth": []
          }
        ],
        "parameters": [
          {
            "name": "space",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Space name"
          }
        ],
        "responses": {
          "200": {
            "description": "Space reset to remote state successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Admin access required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/search/files": {
      "get": {
        "summary": "Search files by name",
        "tags": ["Search"],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Search query"
          },
          {
            "name": "space",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Filter search to specific space"
          }
        ],
        "responses": {
          "200": {
            "description": "Search results",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SearchResult"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/search/content": {
      "get": {
        "summary": "Search content within files",
        "tags": ["Search"],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Search query"
          },
          {
            "name": "space",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Filter search to specific space"
          }
        ],
        "responses": {
          "200": {
            "description": "Content search results",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SearchResult"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{space}/templates": {
      "get": {
        "summary": "Get templates for space",
        "tags": ["Space Templates"],
        "security": [
          {
            "sessionAuth": []
          }
        ],
        "parameters": [
          {
            "name": "space",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Space name"
          }
        ],
        "responses": {
          "200": {
            "description": "List of templates available in space",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Template"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access denied to space",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create template in space",
        "tags": ["Space Templates"],
        "security": [
          {
            "sessionAuth": []
          }
        ],
        "parameters": [
          {
            "name": "space",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Space name"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["name"],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "content": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Template created successfully in space",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "template": {
                      "$ref": "#/components/schemas/Template"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Write access denied to space",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/{space}/comments/{filePath}": {
      "get": {
        "summary": "Get comments for file in space",
        "tags": ["Space Comments"],
        "security": [
          {
            "sessionAuth": []
          }
        ],
        "parameters": [
          {
            "name": "space",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Space name"
          },
          {
            "name": "filePath",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path to the file"
          }
        ],
        "responses": {
          "200": {
            "description": "File comments in space",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "filePath": {
                      "type": "string"
                    },
                    "space": {
                      "type": "string"
                    },
                    "comments": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Comment"
                      }
                    },
                    "commentCount": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access denied to space",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add comment to file in space",
        "tags": ["Space Comments"],
        "security": [
          {
            "sessionAuth": []
          }
        ],
        "parameters": [
          {
            "name": "space",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Space name"
          },
          {
            "name": "filePath",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path to the file"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["content"],
                "properties": {
                  "content": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Comment added successfully to file in space",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "comment": {
                      "$ref": "#/components/schemas/Comment"
                    },
                    "comments": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Comment"
                      }
                    },
                    "commentCount": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Write access denied to space",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/templates": {
      "get": {
        "summary": "Get all templates",
        "tags": ["Templates"],
        "responses": {
          "200": {
            "description": "List of templates",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Template"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create new template",
        "tags": ["Templates"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["name"],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "content": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Template created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "template": {
                      "$ref": "#/components/schemas/Template"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/templates/{templateName}": {
      "get": {
        "summary": "Get specific template",
        "tags": ["Templates"],
        "parameters": [
          {
            "name": "templateName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Template data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Template"
                }
              }
            }
          },
          "404": {
            "description": "Template not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update template",
        "tags": ["Templates"],
        "parameters": [
          {
            "name": "templateName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "content": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Template updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "template": {
                      "$ref": "#/components/schemas/Template"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete template",
        "tags": ["Templates"],
        "parameters": [
          {
            "name": "templateName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Template deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/templates/{templateName}/create-file": {
      "post": {
        "summary": "Create file from template",
        "tags": ["Templates"],
        "parameters": [
          {
            "name": "templateName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["filePath"],
                "properties": {
                  "filePath": {
                    "type": "string"
                  },
                  "customVariables": {
                    "type": "object"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "File created from template successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "templateUsed": {
                      "type": "string"
                    },
                    "placeholdersReplaced": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/comments/{filePath}": {
      "get": {
        "summary": "Get comments for a file",
        "tags": ["Comments"],
        "parameters": [
          {
            "name": "filePath",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "File comments",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "filePath": {
                      "type": "string"
                    },
                    "comments": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Comment"
                      }
                    },
                    "commentCount": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add comment to file",
        "tags": ["Comments"],
        "security": [
          {
            "sessionAuth": []
          }
        ],
        "parameters": [
          {
            "name": "filePath",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["content"],
                "properties": {
                  "content": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Comment added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "comment": {
                      "$ref": "#/components/schemas/Comment"
                    },
                    "comments": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Comment"
                      }
                    },
                    "commentCount": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/comments/{commentId}/{filePath}": {
      "put": {
        "summary": "Update comment",
        "tags": ["Comments"],
        "security": [
          {
            "sessionAuth": []
          }
        ],
        "parameters": [
          {
            "name": "commentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filePath",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["content"],
                "properties": {
                  "content": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Comment updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "comment": {
                      "$ref": "#/components/schemas/Comment"
                    },
                    "comments": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Comment"
                      }
                    },
                    "commentCount": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete comment",
        "tags": ["Comments"],
        "security": [
          {
            "sessionAuth": []
          }
        ],
        "parameters": [
          {
            "name": "commentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filePath",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Comment deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "comments": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Comment"
                      }
                    },
                    "commentCount": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/recent": {
      "get": {
        "summary": "Get recent files (legacy endpoint)",
        "tags": ["Files"],
        "parameters": [
          {
            "name": "days",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 7
            },
            "description": "Number of days to look back for recent files"
          }
        ],
        "responses": {
          "200": {
            "description": "Recent files",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "files": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/RecentFile"
                      }
                    },
                    "days": {
                      "type": "integer"
                    },
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/starred": {
      "get": {
        "summary": "Get starred files (legacy endpoint)",
        "tags": ["Files"],
        "responses": {
          "200": {
            "description": "Starred files",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "path": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "starredAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "lastEditBy": {
                            "type": "string"
                          },
                          "lastEditDate": {
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      }
                    },
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/metadata/recent": {
      "get": {
        "summary": "Get recent files with space filtering",
        "tags": ["Metadata"],
        "security": [
          {
            "sessionAuth": []
          }
        ],
        "parameters": [
          {
            "name": "days",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 7
            },
            "description": "Number of days to look back for recent files"
          },
          {
            "name": "space",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Filter to specific space"
          }
        ],
        "responses": {
          "200": {
            "description": "Recent files with space information",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "files": {
                      "type": "array",
                      "items": {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/RecentFile"
                          },
                          {
                            "type": "object",
                            "properties": {
                              "space": {
                                "type": "string"
                              }
                            }
                          }
                        ]
                      }
                    },
                    "days": {
                      "type": "integer"
                    },
                    "count": {
                      "type": "integer"
                    },
                    "space": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/metadata/starred": {
      "get": {
        "summary": "Get starred files with space filtering",
        "tags": ["Metadata"],
        "security": [
          {
            "sessionAuth": []
          }
        ],
        "parameters": [
          {
            "name": "space",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Filter to specific space"
          }
        ],
        "responses": {
          "200": {
            "description": "Starred files with space information",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "path": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "space": {
                            "type": "string"
                          },
                          "starredAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "lastEditBy": {
                            "type": "string"
                          },
                          "lastEditDate": {
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      }
                    },
                    "count": {
                      "type": "integer"
                    },
                    "space": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/starred/{filePath}": {
      "post": {
        "summary": "Toggle starred status for file",
        "tags": ["Files"],
        "security": [
          {
            "sessionAuth": []
          }
        ],
        "parameters": [
          {
            "name": "filePath",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "starred": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Starred status updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "starred": {
                      "type": "boolean"
                    },
                    "starredAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/metadata/{filePath}": {
      "get": {
        "summary": "Get file metadata",
        "tags": ["Metadata"],
        "parameters": [
          {
            "name": "filePath",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "File metadata",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "metadata": {
                      "type": "object"
                    },
                    "path": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "summary": "Get all users (admin)",
        "tags": ["Administration"],
        "security": [
          {
            "sessionAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of all users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/User"
                      },
                      {
                        "type": "object",
                        "properties": {
                          "spaces": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "role": {
                            "type": "string",
                            "enum": ["admin", "user"]
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Admin access required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "put": {
        "summary": "Update user (admin)",
        "tags": ["Administration"],
        "security": [
          {
            "sessionAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "User ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "spaces": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "role": {
                    "type": "string",
                    "enum": ["admin", "user"]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "user": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Admin access required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/spaces": {
      "get": {
        "summary": "Get all spaces configuration (admin)",
        "tags": ["Administration"],
        "security": [
          {
            "sessionAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of all configured spaces",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Space"
                      },
                      {
                        "type": "object",
                        "properties": {
                          "users": {
                            "type": "array",
                            "items": {
                              "$ref": "#/components/schemas/SpaceUser"
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Admin access required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create new space (admin)",
        "tags": ["Administration"],
        "security": [
          {
            "sessionAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Space"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "users": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/SpaceUser"
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Space created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "space": {
                      "$ref": "#/components/schemas/Space"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Admin access required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/spaces/{index}": {
      "put": {
        "summary": "Update space configuration (admin)",
        "tags": ["Administration"],
        "security": [
          {
            "sessionAuth": []
          }
        ],
        "parameters": [
          {
            "name": "index",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "Space configuration index"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Space"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "users": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/SpaceUser"
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Space updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "space": {
                      "$ref": "#/components/schemas/Space"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Admin access required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete space (admin)",
        "tags": ["Administration"],
        "security": [
          {
            "sessionAuth": []
          }
        ],
        "parameters": [
          {
            "name": "index",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "Space configuration index"
          }
        ],
        "responses": {
          "200": {
            "description": "Space deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Admin access required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Authentication",
      "description": "User authentication and session management"
    },
    {
      "name": "Server",
      "description": "Server status, health information, and performance metrics"
    },
    {
      "name": "Files",
      "description": "Legacy file and folder management operations"
    },
    {
      "name": "Space Files",
      "description": "Space-aware file and folder management operations"
    },
    {
      "name": "Git",
      "description": "Legacy Git version control operations"
    },
    {
      "name": "Space Git",
      "description": "Space-aware Git version control operations"
    },
    {
      "name": "Search",
      "description": "File and content search functionality across spaces"
    },
    {
      "name": "Templates",
      "description": "Global template management and file creation"
    },
    {
      "name": "Space Templates",
      "description": "Space-aware template management"
    },
    {
      "name": "Comments",
      "description": "Legacy file commenting system"
    },
    {
      "name": "Space Comments",
      "description": "Space-aware file commenting system"
    },
    {
      "name": "Metadata",
      "description": "File metadata, recent files, and starred files management"
    },
    {
      "name": "Administration",
      "description": "User and space administration (admin only)"
    }
  ]
}